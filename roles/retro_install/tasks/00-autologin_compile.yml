---
- name: Check if it's already installed
  stat:
    path: "/usr/local/bin/autologin"
  register: autologin_bin

- name: Set package name.
  set_fact:
    package_name: "autologin_{{ ansible_architecture | replace('x86_64','amd64') }}"

- name: Check if there is a package.
  stat:
    path: "/home/packages/{{ package_name }}.deb"
  register: debpackage

- name: Install autologin build dependencies.
  apt:
    name: "{{ packages }}"
  vars:
    packages:
    - git
#    - build-essential
#    - pkg-config
    - meson
    - libpam0g-dev
  when: not autologin_bin.stat.exists

- name: Download autologin git
  git:
    repo: "https://git.sr.ht/~kennylevinsen/autologin"
    dest: "/home/autologin"
  when: not autologin_bin.stat.exists

- name: Prepare to build autologin.
  command:
    chdir: "/home/autologin"
    argv:
      - /usr/bin/meson
      - "setup"
      - "build"
  when: not autologin_bin.stat.exists

- name: Build autologin.
  command:
    chdir: "/home/autologin"
    argv:
      - /usr/bin/ninja
      - "-C"
      - "build"
  when: not autologin_bin.stat.exists

- name: Install autologin.
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "preserve"
    remote_src: true
  with_items:
    - { src: "/home/autologin/build/autologin", dest: "/usr/local/bin/autologin" }
    - { src: "/home/autologin/autologin.service", dest: "/etc/systemd/system/autologin.service" }
    - { src: "/etc/pam.d/login", dest: "/etc/pam.d/autologin" }
  when: not autologin_bin.stat.exists

- name: Uninstall autologin build dependencies.
  apt:
    name: "{{ packages }}"
    state: absent
  vars:
    packages:
    - git
#    - build-essential
#    - pkg-config
    - meson
    - libpam0g-dev

- name: Remove source code.
  file:
    path: "/home/autologin"
    state: absent

- name: Create package dirs.
  file:
    path: "/home/packages/{{ package_name }}/{{ item }}"
    state: directory
  with_items:
     - "usr/local/bin"
     - "etc/systemd/system"
     - "etc/pam.d"
     - "DEBIAN"
  when: not debpackage.stat.exists

- name: Copy package files.
  copy:
    src: "/{{ item }}"
    dest: "/home/packages/{{ package_name }}/{{ item }}"
    mode: "preserve"
    remote_src: true
  with_items:
     - "usr/local/bin/autologin"
     - "etc/systemd/system/autologin.service"
     - "etc/pam.d/autologin"
  when: not debpackage.stat.exists

- name: Copy package's control file.
  template:
    src: "{{ role_path }}/templates/control.j2"
    dest: "/home/packages/{{ package_name }}/DEBIAN/control"
    mode: 0644
  vars:
    package_internal_name: "autologin"
    package_version: "1.0"
    package_architecture: "{{ ansible_architecture | replace('x86_64','amd64') }}" #ansible uses x86_64 debian uses amd64
    package_depends: " "
    package_description: "Autologin"
  when: not debpackage.stat.exists

- name: Build package.
  command:
    chdir: "/home/packages"
    argv:
      - /usr/bin/dpkg-deb
      - "--build"
      - "--root-owner-group"
      - "{{ package_name }}"
  when: not debpackage.stat.exists

- name: Remove package source.
  file:
    path: "/home/packages/{{ package_name }}"
    state: absent
  when: not debpackage.stat.exists

- name: Configure autologin user and command.
  lineinfile:
    dest: "/etc/systemd/system/autologin.service"
    regexp: "ExecStart=autologin username start-command"
    line: "ExecStart=autologin arcade retroarch"
    backrefs: yes

- name: Enable autologin service.
  file:
    src: "/etc/systemd/system/autologin.service"
    dest: "/etc/systemd/system/display-manager.service"
    state: link
