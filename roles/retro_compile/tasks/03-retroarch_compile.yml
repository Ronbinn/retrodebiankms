---
- name: Get the list of packages installed in this system.
  package_facts:
    manager: apt

- name: Get latest release's tag.
  uri:
    url: https://api.github.com/repos/libretro/retroarch/releases/latest
    return_content: true
  register: json_response

- name: Set release version.
  set_fact:
#    release: "v1.19.1"
    release: "{{ json_response.json.tag_name }}"

- name: Check if it's already installed
  stat:
    path: "/usr/local/bin/retroarch"
  register: retroarch_bin

- name: Set package name.
  set_fact:
    package_name: "retroarch_{{ release }}_{{ ansible_architecture | replace('x86_64','amd64') }}"

- name: Check if there is a package.
  stat:
    path: "/home/packages/{{ package_name }}.deb"
  register: debpackage

- name: Install retroarch build dependencies.
  apt:
    name: "{{ item }}"
    install_recommends: no
  with_items:
    - git
    - build-essential
    - pkg-config
    - debhelper
    - glslang-dev
    - libasound2-dev
    - libavcodec-dev
    - libavdevice-dev
    - libavformat-dev
    - libavutil-dev
    - libdbus-1-dev
    - libdrm-dev
    - libegl-dev
    - libflac-dev
    - libfreetype-dev
    - libgbm-dev
    - libglm-dev
    - libjack-jackd2-dev
    - libminiupnpc-dev
    - libopenal-dev
    - libpulse-dev
    - libsdl2-dev
    - libstb-dev
    - libswscale-dev
    - libudev-dev
    - libusb-1.0-0-dev
    - libv4l-dev
    - libvulkan-dev
    - libx11-xcb-dev
    - libxinerama-dev
    - libxml2-dev
    - libxv-dev
    - libxxf86vm-dev
    - pkg-config
    - python3-dev
    - qtbase5-dev
    - wayland-protocols
    - x11proto-xext-dev
    - zlib1g-dev
  when: not retroarch_bin.stat.exists

- name: Download retroarch git.
  git:
    repo: "https://github.com/libretro/retroarch"
    dest: "/home/retroarchgit"
    version: "{{ release  }}"
  when: not retroarch_bin.stat.exists

- name: Configure retroarch
  command: ./configure
  args:
    chdir: "/home/retroarchgit"
  when: not retroarch_bin.stat.exists

- name: Build retroarch.
  make:
    chdir: "/home/retroarchgit"
    params:
      NUM_THREADS: "{{ ansible_processor_nproc  }}"
  when: not retroarch_bin.stat.exists

- name: Install retroarch.
  make:
    chdir: "/home/retroarchgit"
    target: install
  when: not retroarch_bin.stat.exists

- name: Remove source code.
  file:
    path: "/home/retroarchgit"
    state: absent

- name: Create package dirs.
  file:
    path: "/home/packages/{{ package_name }}/{{ item }}"
    state: directory
  with_items:
     - "usr/local/bin"
     - "etc"
     - "usr/local/share/metainfo"
     - "usr/local/share/applications"
     - "usr/local/share/man/man6"
     - "usr/local/share/pixmaps"
     - "usr/local/share/doc/retroarch"
     - "DEBIAN"
  when: not debpackage.stat.exists

- name: Copy package files.
  copy:
    src: "/{{ item }}"
    dest: "/home/packages/{{ package_name }}/{{ item }}"
    mode: "preserve"
    remote_src: true
  with_items:
     - "usr/local/bin/retroarch"
     - "usr/local/bin/retroarch-cg2glsl"
     - "etc/retroarch.cfg"
#     - "usr/local/share/metainfo/com.libretro.RetroArch.appdata.xml" #v1.19.1
     - "usr/local/share/metainfo/com.libretro.RetroArch.metainfo.xml" #v1.20.0
#     - "usr/local/share/applications/org.libretro.RetroArch.desktop" #v1.19.1
     - "usr/local/share/applications/com.libretro.RetroArch.desktop" #v1.20.0
     - "usr/local/share/man/man6/retroarch.6"
     - "usr/local/share/man/man6/retroarch-cg2glsl.6"
#     - "usr/local/share/pixmaps/retroarch.svg" #v1.19.1
     - "usr/local/share/pixmaps/com.libretro.RetroArch.svg" #v1.20.0
     - "usr/local/share/doc/retroarch/COPYING"
     - "usr/local/share/doc/retroarch/README.md"
  when: not debpackage.stat.exists

- name: Copy package's control file.
  template:
    src: "{{ role_path }}/templates/control.j2"
    dest: "/home/packages/{{ package_name }}/DEBIAN/control"
    mode: 0644
  vars:
    package_internal_name: "retroarch"
    package_version: "{{ release | replace('v','') }}"
    package_architecture: "{{ ansible_architecture | replace('x86_64','amd64') }}" #ansible uses x86_64 debian uses amd64
    package_depends: "libqt5core5a, libqt5gui5-gles, libasound2, libjack0, libpulse0, libxxf86vm1, libgl1, libsdl2-2.0-0, libv4l-0, libavcodec59, libavformat59, libswscale6"
    package_description: "Emulator frontend"
  when: not debpackage.stat.exists

- name: Build package.
  command:
    chdir: "/home/packages"
    argv:
      - /usr/bin/dpkg-deb
      - "--build"
      - "--root-owner-group"
      - "{{ package_name }}"
  when: not debpackage.stat.exists

- name: Remove package source.
  file:
    path: "/home/packages/{{ package_name }}"
    state: absent

- name: Uninstall retroarch build dependencies.
  apt:
    name: "{{ item }}"
    state: absent
  with_items:
    - git
    - build-essential
    - pkg-config
    - debhelper
    - glslang-dev
    - libasound2-dev
    - libavcodec-dev
    - libavdevice-dev
    - libavformat-dev
    - libavutil-dev
    - libdbus-1-dev
    - libdrm-dev
    - libegl-dev
    - libflac-dev
    - libfreetype-dev
    - libgbm-dev
    - libglm-dev
    - libjack-jackd2-dev
    - libminiupnpc-dev
    - libopenal-dev
    - libpulse-dev
    - libsdl2-dev
    - libstb-dev
    - libswscale-dev
    - libudev-dev
    - libusb-1.0-0-dev
    - libv4l-dev
    - libvulkan-dev
    - libx11-xcb-dev
    - libxinerama-dev
    - libxml2-dev
    - libxv-dev
    - libxxf86vm-dev
    - pkg-config
    - python3-dev
    - qtbase5-dev
    - wayland-protocols
    - x11proto-xext-dev
    - zlib1g-dev
  when: "ansible_facts.packages[item] is not defined" #just remove the new installed packages

- name: Remove dependencies that are no longer required.
  apt:
    autoremove: yes
