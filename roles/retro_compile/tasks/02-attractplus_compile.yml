---
- name: Get the list of packages installed in this system.
  package_facts:
    manager: apt

- name: Get latest release's tag.
  uri:
    url: https://api.github.com/repos/oomek/attractplus/releases/latest
    return_content: true
  register: json_response

- name: Set release version.
  set_fact:
#    release: "3.0.9"
    release: "{{ json_response.json.tag_name }}"

- name: Check if it's already installed
  stat:
    path: "/usr/local/bin/attractplus"
  register: attractplus_bin

- name: Set package name.
  set_fact:
    package_name: "attractplus_{{ release }}_{{ ansible_architecture | replace('x86_64','amd64') }}"

- name: Check if there is a package.
  stat:
    path: "/home/packages/{{ package_name }}.deb"
  register: debpackage

- name: Install attractplus build dependencies.
  apt:
    name: "{{ packages }}"
    install_recommends: no
  vars:
    packages:
    - git
    - build-essential
    - pkg-config
    - cmake
    - libdrm-dev
    - libgbm-dev
    - libavformat-dev
    - libavcodec-dev
    - libavutil-dev
    - libswscale-dev
    - libswresample-dev
    - libopenal-dev
    - libgl1-mesa-dev
    - libudev-dev
    - libvorbis-dev
    - libflac-dev
    - libfreetype-dev
    - libexpat1-dev
    - libglu1-mesa-dev
    - libboost-filesystem-dev
    - libboost-system-dev
  when: not attractplus_bin.stat.exists

- name: Download attractplus git
  git:
    repo: "https://github.com/oomek/attractplus"
    dest: "/home/attractplus"
#    version: "{{ release  }}"
#    recursive: true
  when: not attractplus_bin.stat.exists

- name: Build attractplus.
  make:
    chdir: "/home/attractplus"
    params:
      prefix: "/usr/local"
      USE_DRM: 1
      STATIC: 1
      USE_SYSTEM_SFML: 0
  when: not attractplus_bin.stat.exists

- name: Install attractplus.
  make:
    chdir: "/home/attractplus"
    target: install
  when: not attractplus_bin.stat.exists

- name: Uninstall attractplus build dependencies.
  apt:
    name: "{{ item }}"
    state: absent
    purge: true
  with_items:
    - git
    - build-essential
    - pkg-config
    - cmake
    - libdrm-dev
    - libgbm-dev
    - libavformat-dev
    - libavcodec-dev
    - libavutil-dev
    - libswscale-dev
    - libswresample-dev
    - libopenal-dev
    - libgl1-mesa-dev
    - libudev-dev
    - libvorbis-dev
    - libflac-dev
    - libfreetype-dev
    - libexpat1-dev
    - libglu1-mesa-dev
    - libboost-filesystem-dev
    - libboost-system-dev
  when: "ansible_facts.packages[item] is not defined" #just remove the new installed packages

- name: Remove source code.
  file:
    path: "/home/attractplus"
    state: absent

- name: Create package dirs.
  file:
    path: "/home/packages/{{ package_name }}/{{ item }}"
    state: directory
  with_items:
     - "usr/local/bin"
     - "usr/local/share/attractplus"
     - "DEBIAN"
  when: not debpackage.stat.exists

- name: Copy package files.
  copy:
    src: "/{{ item }}"
    dest: "/home/packages/{{ package_name }}/{{ item }}"
    mode: "preserve"
    remote_src: true
  with_items:
     - "usr/local/bin/attractplus"
     - "usr/local/share/attractplus"
  when: not debpackage.stat.exists

- name: Copy package's control file.
  template:
    src: "{{ role_path }}/templates/control.j2"
    dest: "/home/packages/{{ package_name }}/DEBIAN/control"
    mode: 0644
  vars:
    package_internal_name: "attractplus"
    package_version: "{{ release }}"
    package_architecture: "{{ ansible_architecture | replace('x86_64','amd64') }}" #ansible uses x86_64 debian uses amd64
    package_depends: "libgl1, libgbm1, libavformat59, libswscale6, libopenal1"
    package_description: "Emulator frontend"
  when: not debpackage.stat.exists

- name: Build package.
  command:
    chdir: "/home/packages"
    argv:
      - /usr/bin/dpkg-deb
      - "--build"
      - "--root-owner-group"
      - "{{ package_name }}"
  when: not debpackage.stat.exists

- name: Remove package source.
  file:
    path: "/home/packages/{{ package_name }}"
    state: absent

- name: Remove dependencies that are no longer required.
  apt:
    autoremove: yes
    purge: true
